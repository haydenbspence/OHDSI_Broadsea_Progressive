# Dockerfile build and push workflow for multi-platform images

name: ci

on:
  push:
    branches:
      - "main"

env:
  GHCR_TOKEN: ${{ secrets.GHCR_TOKEN }}
  IMAGE_NAME: ${{ secrets.IMAGE_NAME }}
  ROOT_CONTAINER: ${{ secrets.ROOT_CONTAINER }}
  OHDSI_USER: ${{ secrets.OHDSI_USER }}
  OHDSI_UID: ${{ secrets.OHDSI_UID }}
  OHDSI_GID: ${{ secrets.OHDSI_GID }}

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        platform:
          - linux/amd64
          - linux/arm/v6
          - linux/arm/v7
          - linux/arm/v8
          - linux/arm64
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ github.repository_owner }}/${{ github.repository }}/images/broadsea-foundation
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GitHub Container Registry (GHCR)
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_TOKEN }}
      - name: Build and push by digest
        id: build
        uses: docker/build-push-action@v5
        with:
          context: ./images/broadsea-foundation  # Specify the path to your Dockerfile
          platforms: ${{ matrix.platform }}
          labels: ${{ steps.meta.outputs.labels }}
          # Adding caching
          cache-from: type=registry,ref=ghcr.io/${{ github.repository_owner | lower }}/${{ github.repository | lower }}/images/broadsea-foundation:cache
          cache-to: type=inline
          outputs: type=image,name=ghcr.io/${{ github.repository_owner | lower }}/${{ github.repository | lower }}/images/broadsea-foundation:${{ steps.meta.outputs.version }},push-by-digest=true,name-canonical=true,push=true
          build-args: |
            ROOT_CONTAINER=${{ env.ROOT_CONTAINER }}
            OHDSI_USER=${{ env.OHDSI_USER }}
            OHDSI_UID=${{ env.OHDSI_UID }}
            OHDSI_GID=${{ env.OHDSI_GID }}
      - name: Export digest
        run: |
          mkdir -p /tmp/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "/tmp/digests/${digest#sha256:}"
      - name: Upload digest
        uses: actions/upload-artifact@v3
        with:
          name: digests
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1
      - name: Notify build failure
        if: failure()
        run: echo "Build failed. Please check the logs for details."

  merge:
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: Download digests
        uses: actions/download-artifact@v3
        with:
          name: digests
          path: /tmp/digests
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ github.repository_owner }}/${{ github.repository }}/images/broadsea-foundation
      - name: Login to GitHub Container Registry (GHCR)
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_TOKEN }}
      - name: Create manifest list and push
        working-directory: /tmp/digests
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf 'ghcr.io/${{ github.repository_owner | lower }}/${{ github.repository | lower }}/images/broadsea-foundation:${{ steps.meta.outputs.version }}@sha256:%s ' *)
      - name: Inspect image
        run: |
          docker buildx imagetools inspect ghcr.io/${{ github.repository_owner | lower }}/${{ github.repository | lower }}/images/broadsea-foundation:${{ steps.meta.outputs.version }}
